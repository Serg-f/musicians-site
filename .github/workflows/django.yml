name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-22.04

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    environment:
      name: secrets_project

    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']

    env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: ${{ secrets.DEBUG }}
        ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}

        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}

        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
        EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
        EMAIL_USE_SSL: ${{ secrets.EMAIL_USE_SSL }}

        CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
        CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
        CELERY_ACCEPT_CONTENT: ${{ secrets.CELERY_ACCEPT_CONTENT }}
        CELERY_TASK_SERIALIZER: ${{ secrets.CELERY_TASK_SERIALIZER }}
        CELERY_RESULT_SERIALIZER: ${{ secrets.CELERY_RESULT_SERIALIZER }}
        CELERY_TIMEZONE: ${{ secrets.CELERY_TIMEZONE }}

        ACCOUNT_EMAIL_REQUIRED: ${{ secrets.ACCOUNT_EMAIL_REQUIRED }}
        ACCOUNT_USERNAME_REQUIRED: ${{ secrets.ACCOUNT_USERNAME_REQUIRED }}
        ACCOUNT_AUTHENTICATION_METHOD: ${{ secrets.ACCOUNT_AUTHENTICATION_METHOD }}
        ACCOUNT_EMAIL_VERIFICATION: ${{ secrets.ACCOUNT_EMAIL_VERIFICATION }}
        ACCOUNT_MAX_EMAIL_ADDRESSES: ${{ secrets.ACCOUNT_MAX_EMAIL_ADDRESSES }}
        ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION: ${{ secrets.ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION }}
        ACCOUNT_USERNAME_BLACKLIST: ${{ secrets.ACCOUNT_USERNAME_BLACKLIST }}
        ACCOUNT_USERNAME_MIN_LENGTH: ${{ secrets.ACCOUNT_USERNAME_MIN_LENGTH }}
        ACCOUNT_USERNAME_MAX_LENGTH: ${{ secrets.ACCOUNT_USERNAME_MAX_LENGTH }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test

  deploy:
    runs-on: ubuntu-22.04
    needs: build
    environment:
      name: secrets_project
    env:
      KEY: ${{ secrets.KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Debug
        run: echo "key:${KEY}"

      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: '142.93.173.178'
          username: 'root'
          key: ${{ secrets.KEY }}
          script: |
            cd /var/www/musician-site
            git pull
            sudo systemctl restart gunicorn