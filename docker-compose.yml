version: "3.8"
services:
  users-service:
    build: ./users
    container_name: users-container
    environment:
      DEBUG: "${DEBUG}"
      SECRET_KEY: "${SECRET_KEY}"
      LOG_LEVEL: "debug"
      DB_NAME: "${DB_NAME_USERS}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
    volumes:
      - ./users/src:/project_dir
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8020:8000"
    networks:
      app-network:
        aliases:
          - users-service

  musicians-service:
    build: ./musicians
    container_name: musicians-container
    environment:
      DEBUG: "${DEBUG}"
      SECRET_KEY: "${SECRET_KEY}"
      LOG_LEVEL: "${LOG_LEVEL}"
      DB_NAME: "${DB_NAME_MUSICIANS}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
    volumes:
      - ./musicians/src:/project_dir
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    networks:
      app-network:
        aliases:
          - musicians-service

  #  frontend-service:
  #    build: ./frontend
  #    container_name: frontend-container
  #    ports:
  #      - "3000:3000"
  #    networks:
  #      - app-network
  #    depends_on:
  #      - users-service
  #      - musicians-service
  #    volumes:
  #      - ./frontend/frontend:/project_dir


  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  celery-worker:
    build: ./musicians
    container_name: celery-worker
    command: celery -A mus_proj worker --loglevel=info
    environment:
      DEBUG: "${DEBUG}"
      SECRET_KEY: "${SECRET_KEY}"
      LOG_LEVEL: "${LOG_LEVEL}"
      DB_NAME: "${DB_NAME_MUSICIANS}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
    volumes:
      - ./musicians/src:/project_dir
    depends_on:
      - musicians-service
      - rabbitmq
    networks:
      - app-network

  celery-beat:
    build: ./musicians
    container_name: celery-beat
    command: celery -A mus_proj beat --loglevel=info
    environment:
      DEBUG: "${DEBUG}"
      SECRET_KEY: "${SECRET_KEY}"
      LOG_LEVEL: "${LOG_LEVEL}"
      DB_NAME: "${DB_NAME_MUSICIANS}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
    volumes:
      - ./musicians/src:/project_dir
    depends_on:
      - musicians-service
      - rabbitmq
    networks:
      - app-network


networks:
  app-network:
    driver: bridge
