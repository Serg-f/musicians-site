apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: musicians-service
  name: musicians-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: musicians-service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/app-network: "true"
        io.kompose.service: musicians-service
    spec:
      containers:
      - args:
        - gunicorn
        - --workers
        - "2"
        - --threads
        - "4"
        - --bind
        - 0.0.0.0:8000
        - mus_proj.wsgi:application
        env:
        - name: DB_HOST
        - name: DB_NAME_MUSICIANS
        - name: DB_PASSWORD
        - name: DB_PORT
        - name: DB_USER
        - name: DEBUG
        - name: GOOGLE_APPLICATION_CREDENTIALS
        - name: GS_BUCKET_NAME
        - name: LOG_LEVEL
        - name: REDIS_URL
          value: redis://redis:6379/1
        - name: SECRET_KEY
        - name: USE_GCP_STORAGE
        image: musicians-service
        imagePullPolicy: ""
        name: musicians-container
        resources: {}
        volumeMounts:
        - mountPath: /project_dir
          name: musicians-service-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: musicians-service-claim0
        persistentVolumeClaim:
          claimName: musicians-service-claim0
status: {}
